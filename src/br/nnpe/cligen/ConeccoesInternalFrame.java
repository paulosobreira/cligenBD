package br.nnpe.cligen;

import java.io.File;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Iterator;
import java.util.List;

import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.event.InternalFrameEvent;

import org.jdom.Document;
import org.jdom.Element;
import org.jdom.input.SAXBuilder;

/**
 * 
 * @author Sobreira Created on 15 de Janeiro de 2003, 15:12
 */
public class ConeccoesInternalFrame extends javax.swing.JInternalFrame {
	// Variables declaration - do not modify//GEN-BEGIN:variables
	private static int numJanela;
	private javax.swing.JCheckBox Jdbc2;
	private javax.swing.JComboBox dbName;
	private javax.swing.JButton conectar;
	private javax.swing.JButton abrirTabela;
	private javax.swing.JButton executarConsulta;
	private javax.swing.JComboBox listaTabelas;
	private javax.swing.JPanel jPanelPricipal;
	private javax.swing.JPanel jPanelComponentes;
	private javax.swing.JPanel jPanelLabels;
	private javax.swing.JPanel jPanel4;
	private javax.swing.JPanel jPanel5;
	private javax.swing.JPanel jPanelEsquerda;
	private javax.swing.JPanel jPanel7;
	private javax.swing.JPasswordField password;
	private javax.swing.JTextField driver;
	private javax.swing.JTextField url;
	private javax.swing.JTextField user;
	private JLabel servidor,versao;

	// End of variables declaration//GEN-END:variables
	private ResultSet rs;
	private Statement stmt;

	public ConeccoesInternalFrame() {
		numJanela++;
		initComponents();

		try {
			SAXBuilder builder = new SAXBuilder("org.apache.xerces.parsers.SAXParser");
			Document doc = builder.build(new File("databases.xml"));
			Element root = doc.getRootElement();
			List dbs = root.getChildren("db");
			for (Iterator iterator = dbs.iterator(); iterator.hasNext();) {
				Element db = (Element) iterator.next();
				if (db.getChild("name") != null) {
					dbName.addItem(db.getChild("name").getText().trim());
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
			JOptionPane.showMessageDialog(null, e.getLocalizedMessage(), "Erro de SAXParser",
					JOptionPane.ERROR_MESSAGE);

		}
	}

	public String getTitle() {
		return super.getTitle() + " " + numJanela;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() { // GEN-BEGIN:initComponents
		jPanelPricipal = new javax.swing.JPanel();
		jPanelEsquerda = new javax.swing.JPanel();
		jPanelLabels = new javax.swing.JPanel();
		jPanelComponentes = new javax.swing.JPanel();
		dbName = new javax.swing.JComboBox();
		listaTabelas = new javax.swing.JComboBox();
		driver = new javax.swing.JTextField();
		url = new javax.swing.JTextField();
		user = new javax.swing.JTextField();
		password = new javax.swing.JPasswordField();
		jPanel7 = new javax.swing.JPanel();
		jPanel5 = new javax.swing.JPanel();
		conectar = new javax.swing.JButton();
		Jdbc2 = new javax.swing.JCheckBox();
		abrirTabela = new javax.swing.JButton();
		executarConsulta = new javax.swing.JButton();
		jPanel4 = new javax.swing.JPanel();
		servidor = new JLabel();
		versao = new JLabel();

		setClosable(true);
		setIconifiable(true);
		setMaximizable(true);
		setResizable(true);
		setTitle("ConDB");
		setMinimumSize(new java.awt.Dimension(600, 300));
		setPreferredSize(new java.awt.Dimension(600, 300));
		jPanelPricipal.setLayout(new java.awt.BorderLayout(10, 10));

		jPanelPricipal.setBorder(new javax.swing.border.TitledBorder("Conectar ao Banco de Dados"));
		jPanelPricipal.setPreferredSize(new java.awt.Dimension(380, 270));
		jPanelEsquerda.setLayout(new java.awt.BorderLayout(10, 10));

		jPanelLabels.setLayout(new java.awt.GridLayout(5, 0, 5, 5));

		jPanelLabels.add(new JLabel("Nome"));

		jPanelLabels.add(new JLabel("Driver"));

		jPanelLabels.add(new JLabel("Url"));

		jPanelLabels.add(new JLabel("User"));

		jPanelLabels.add(new JLabel("Password"));

		jPanelEsquerda.add(jPanelLabels, java.awt.BorderLayout.WEST);

		jPanelComponentes.setLayout(new java.awt.GridLayout(5, 0, 5, 5));

		dbName.setEditable(true);
		jPanelComponentes.add(dbName);

		driver.setEditable(true);
		jPanelComponentes.add(driver);
		
		url.setEditable(true);
		jPanelComponentes.add(url);

		jPanelComponentes.add(user);

		jPanelComponentes.add(password);

		jPanelEsquerda.add(jPanelComponentes, java.awt.BorderLayout.CENTER);

		jPanelPricipal.add(jPanelEsquerda, java.awt.BorderLayout.CENTER);

		jPanel7.setLayout(new java.awt.BorderLayout());

		conectar.setText("Conectar");
		conectar.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		jPanel5.add(conectar);

		Jdbc2.setText("Jdbc2");
		jPanel5.add(Jdbc2);

		abrirTabela.setText("Abrir Tabela");
		abrirTabela.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton2ActionPerformed(evt);
			}
		});

		jPanel5.add(abrirTabela);

		executarConsulta.setText("Executar Consulta");
		executarConsulta.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton3ActionPerformed(evt);
			}
		});

		jPanel5.add(executarConsulta);

		jPanel7.add(jPanel5, java.awt.BorderLayout.NORTH);

		jPanel4.setLayout(new java.awt.GridLayout(3, 0));

		listaTabelas.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				Action(evt);
			}
		});
		listaTabelas.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				click(evt);
			}
		});

		jPanel4.add(listaTabelas);

		jPanel4.add(servidor);

		jPanel4.add(versao);

		jPanel7.add(jPanel4, java.awt.BorderLayout.CENTER);

		jPanelPricipal.add(jPanel7, java.awt.BorderLayout.SOUTH);

		getContentPane().add(jPanelPricipal, java.awt.BorderLayout.CENTER);
		addInternalFrameListener(new InternalFrameAdapter() {
			public void internalFrameClosing(InternalFrameEvent e) {
				super.internalFrameClosing(e);
				BarraSetTop.removerJIntenalFrame(ConeccoesInternalFrame.this);
			}
		});
		pack();
	} // GEN-END:initComponents

	private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) { // GEN-FIRST:event_jButton3ActionPerformed

		// Add your handling code here:
		try {
			if (rs != null) {
				rs.close();
			}
			String tableName = (String) listaTabelas.getSelectedItem();
			PesquisaInternalFrame pesquisaInternalFrame = new PesquisaInternalFrame(null, tableName, stmt);
			MainFrame.jDesktopPane1.add(pesquisaInternalFrame);
			pesquisaInternalFrame.show();
			BarraSetTop.adicionarJIntenalFrame(pesquisaInternalFrame);
		} catch (Exception e) {
			JTextArea ta = new JTextArea(3, 15);
			ta.setText(e.toString());
			JOptionPane.showMessageDialog(this, ta, "Erro SQL", JOptionPane.ERROR_MESSAGE);
			e.printStackTrace();
		}
	} // GEN-LAST:event_jButton3ActionPerformed

	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) { // GEN-FIRST:event_jButton2ActionPerformed

		// Add your handling code here:
		try {
			String tableName = (String) listaTabelas.getSelectedItem();

			if (rs != null) {
				rs.close();
			}

			String query = "SELECT * FROM " + tableName;
			rs = stmt.executeQuery(query);

			PesquisaInternalFrame pesquisaInternalFrame;

			if (Jdbc2.isSelected()) {
				pesquisaInternalFrame = new PesquisaInternalFrame(new ScrollingResultSetTableModel(rs, true), tableName,
						stmt);
			} else {
				pesquisaInternalFrame = new PesquisaInternalFrame(new CachingResultSetTableModel(rs, true), tableName,
						stmt);
			}
			MainFrame.jDesktopPane1.add(pesquisaInternalFrame);
			pesquisaInternalFrame.show();
			BarraSetTop.adicionarJIntenalFrame(pesquisaInternalFrame);
			pesquisaInternalFrame.setMaximum(true);

		} catch (Exception e) {
			JTextArea ta = new JTextArea(3, 15);
			ta.setText(e.toString());
			JOptionPane.showMessageDialog(this, ta, "Erro SQL", JOptionPane.ERROR_MESSAGE);
			e.printStackTrace();
		}
	} // GEN-LAST:event_jButton2ActionPerformed

	private void click(java.awt.event.MouseEvent evt) { // GEN-FIRST:event_click

		// Add your handling code here:
	} // GEN-LAST:event_click

	private void Action(java.awt.event.ActionEvent evt) { // GEN-FIRST:event_Action

		// Add your handling code here:
	} // GEN-LAST:event_Action

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) { // GEN-FIRST:event_jButton1ActionPerformed

		// Add your handling code here:
		try {
			Class.forName((String) driver.getText());

			Connection con = DriverManager.getConnection((String) url.getText(), user.getText(),
					new String(password.getPassword()));

			if (Jdbc2.isSelected()) {
				stmt = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
			} else {
				stmt = con.createStatement();
			}

			DatabaseMetaData md = con.getMetaData();
			ResultSet mrs = md.getTables(null, null, null, new String[] { "TABLE" });

			while (mrs.next())
				listaTabelas.addItem(mrs.getString(3));

			mrs.close();
			servidor.setText("Servidor: " + md.getDatabaseProductName());
			versao.setText("Vers√£o: " + md.getDatabaseProductVersion());
		} catch (Exception e) {
			JTextArea ta = new JTextArea(3, 15);
			ta.setText(e.toString());
			JOptionPane.showMessageDialog(this, ta, "Erro SQL", JOptionPane.ERROR_MESSAGE);
			e.printStackTrace();
		}
	} // GEN-LAST:event_jButton1ActionPerformed
}
